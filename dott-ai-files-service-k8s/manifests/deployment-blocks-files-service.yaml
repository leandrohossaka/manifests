apiVersion: apps/v1
kind: Deployment
metadata:
  name: blocks-files-service
  labels:
    app: blocks-files-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: blocks-files-service
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: blocks-files-service
    spec:
      initContainers:
      - name: dep-blocks-user-db-readiness
        image: busybox:stable
        command: ['sh', '-c', 
          'echo -e "Checking for the availability of blocks-user-db deployment"; 
          while ! nc -z blocks-user-db 3306; 
          do sleep 1; printf "-"; 
          done; 
          echo -e "  >> blocks-user-db has started";']
      - name: dep-blocks-user-service-readiness
        image: busybox:stable
        command: ['sh', '-c', 
          'echo -e "Checking for the availability of blocks-user-service deployment"; 
          while ! nc -z blocks-user-service 8080; 
          do sleep 1; printf "-"; 
          done; 
          echo -e "  >>blocks-user-service has started";']   
      volumes:
      - name: blocks-files-service-data-disk
        persistentVolumeClaim:
          claimName: blocks-files-service-data
      containers:
      - name: blocks-files-service
        image: registry.vericode.com.br/sinacor.blocks.files.service:0.0.6
        volumeMounts:
        - name: blocks-files-service-data-disk
          mountPath: /data/storage/dott
        ports:
        - containerPort: 8080
